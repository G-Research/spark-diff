name: CI

on: [push, pull_request_target]

jobs:
  build-and-test:
    name: Build and Test (Spark ${{ matrix.spark-version }} Scala ${{ matrix.scala-version }} Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    # always run on push events, but only run on pull_request_target event when pull request pulls from fork repository
    # for pull requests within the same repository, the pull event is sufficient
    if: github.event_name == 'push' || github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name != github.repository

    strategy:
      fail-fast: false
      matrix:
        spark-version: ['2.4.6', '3.0.0']
        scala-version: ['2.11.12', '2.12.10']
        python-version: ['3.6']
        exclude:
          - spark-version: '3.0.0'
            scala-version: '2.11.12'
        include:
          - spark-version: '2.4.6'
            spark-compat-version: '2.4'
          - spark-version: '3.0.0'
            spark-compat-version: '3.0'

          - scala-version: '2.11.12'
            scala-compat-version: '2.11'
          - scala-version: '2.12.10'
            scala-compat-version: '2.12'

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set versions in pom.xml
      run: |
        ./set-version.sh ${{ matrix.spark-version }} ${{ matrix.scala-version }}
        git diff

    - name: Setup JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r python/requirements-${{ matrix.spark-compat-version }}_${{ matrix.scala-compat-version }}.txt
        pip install pytest

    - name: Scala Tests
      run: mvn --batch-mode test

    - name: Python Tests
      env:
        PYTHONPATH: python:python/test
      run: |
        mkdir -p target/surefire-reports
        python -m pytest python/test --junit-xml target/surefire-reports/pytest.xml

    - name: Generate Unit Test Report
      if: failure()
      run: mvn --batch-mode surefire-report:report-only

    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Unit Test Results (Spark ${{ matrix.spark-version }} Scala ${{ matrix.scala-version }} Python ${{ matrix.python-version }})
        path: |
          target/surefire-reports/*.xml
          !target/surefire-reports/TEST-org.scalatest*.xml
          target/site/surefire-report.html

  publish-test-results:
    name: "Publish Unit Tests Results"
    needs: build-and-test
    runs-on: ubuntu-latest
    # the build-and-test job might be skipped, we don't need to run this job then
    if: success() || failure()

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@master
      with:
        check_name: Unit Test Results
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: "artifacts/**/*.xml"
        log_level: DEBUG
